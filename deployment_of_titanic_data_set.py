# -*- coding: utf-8 -*-
"""Deployment of Titanic Data set.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1HtcnpmlVrH8ypN6XQXZFJJ0UXjK3HcZW
"""

import seaborn as sns
import pandas as pd
# Load Titanic dataset
titanic_df = sns.load_dataset('titanic')

# Preprocess the dataset (handle missing values, encode categorical variables, etc.)
# For simplicity, we'll drop rows with missing values and select a subset of features
titanic_df.dropna(inplace=True)
features = ['pclass', 'sex', 'age', 'fare', 'sibsp', 'parch']
X = titanic_df[features]
y = titanic_df['survived']

# Perform one-hot encoding for categorical variables (e.g., 'sex')
X = pd.get_dummies(X, columns=['sex'], drop_first=True)

X

from sklearn.model_selection import train_test_split

# Split the dataset into train and test sets
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

from sklearn.ensemble import RandomForestClassifier

# Train a Random Forest classifier
model = RandomForestClassifier()
model.fit(X_train, y_train)

from sklearn.metrics import accuracy_score

# Make predictions on the test set
y_pred = model.predict(X_test)

# Evaluate the model
accuracy = accuracy_score(y_test, y_pred)
print("Accuracy:", accuracy)

import joblib

# Save the trained model to a file
joblib.dump(model, "titanic_model.pkl")

import joblib
from flask import jsonify

def predict_survival(request):
    # Load the trained model
    model = joblib.load("gs://your-bucket-name/titanic_model.pkl")

    # Extract features from the request
    features = request.json["features"]

    # Make predictions
    prediction = model.predict([features])

    # Return the prediction
    return jsonify({"prediction": prediction.tolist()})

from google.colab import drive
drive.mount('/content/drive')

X.head()

# Example inference code
new_data = [[3,10.0,71.50,1,1,1]] # Example input data
predictions = model.predict(new_data)
print(predictions)

